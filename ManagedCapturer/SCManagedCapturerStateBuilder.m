// 49126048c3d19dd5b676b8d39844cf133833b67a
// Generated by the value-object.rb  DO NOT EDIT!!

#import "SCManagedCapturerStateBuilder.h"

#import <SCFoundation/SCValueObjectHelpers.h>

#import <FastCoding/FastCoder.h>

@implementation SCManagedCapturerStateBuilder {
    BOOL _isRunning;
    BOOL _isNightModeActive;
    BOOL _isPortraitModeActive;
    BOOL _lowLightCondition;
    BOOL _adjustingExposure;
    SCManagedCaptureDevicePosition _devicePosition;
    CGFloat _zoomFactor;
    BOOL _flashSupported;
    BOOL _torchSupported;
    BOOL _flashActive;
    BOOL _torchActive;
    BOOL _lensesActive;
    BOOL _arSessionActive;
    BOOL _liveVideoStreaming;
    BOOL _lensProcessorReady;
}

+ (instancetype)withManagedCapturerState:(id<SCManagedCapturerState>)managedCapturerState
{
    SCManagedCapturerStateBuilder *builder = [[SCManagedCapturerStateBuilder alloc] init];
    builder->_isRunning = managedCapturerState.isRunning;
    builder->_isNightModeActive = managedCapturerState.isNightModeActive;
    builder->_isPortraitModeActive = managedCapturerState.isPortraitModeActive;
    builder->_lowLightCondition = managedCapturerState.lowLightCondition;
    builder->_adjustingExposure = managedCapturerState.adjustingExposure;
    builder->_devicePosition = managedCapturerState.devicePosition;
    builder->_zoomFactor = managedCapturerState.zoomFactor;
    builder->_flashSupported = managedCapturerState.flashSupported;
    builder->_torchSupported = managedCapturerState.torchSupported;
    builder->_flashActive = managedCapturerState.flashActive;
    builder->_torchActive = managedCapturerState.torchActive;
    builder->_lensesActive = managedCapturerState.lensesActive;
    builder->_arSessionActive = managedCapturerState.arSessionActive;
    builder->_liveVideoStreaming = managedCapturerState.liveVideoStreaming;
    builder->_lensProcessorReady = managedCapturerState.lensProcessorReady;
    return builder;
}

- (SCManagedCapturerState *)build
{
    return [[SCManagedCapturerState alloc] initWithIsRunning:_isRunning
                                           isNightModeActive:_isNightModeActive
                                        isPortraitModeActive:_isPortraitModeActive
                                           lowLightCondition:_lowLightCondition
                                           adjustingExposure:_adjustingExposure
                                              devicePosition:_devicePosition
                                                  zoomFactor:_zoomFactor
                                              flashSupported:_flashSupported
                                              torchSupported:_torchSupported
                                                 flashActive:_flashActive
                                                 torchActive:_torchActive
                                                lensesActive:_lensesActive
                                             arSessionActive:_arSessionActive
                                          liveVideoStreaming:_liveVideoStreaming
                                          lensProcessorReady:_lensProcessorReady];
}

- (instancetype)setIsRunning:(BOOL)isRunning
{
    _isRunning = isRunning;
    return self;
}

- (instancetype)setIsNightModeActive:(BOOL)isNightModeActive
{
    _isNightModeActive = isNightModeActive;
    return self;
}

- (instancetype)setIsPortraitModeActive:(BOOL)isPortraitModeActive
{
    _isPortraitModeActive = isPortraitModeActive;
    return self;
}

- (instancetype)setLowLightCondition:(BOOL)lowLightCondition
{
    _lowLightCondition = lowLightCondition;
    return self;
}

- (instancetype)setAdjustingExposure:(BOOL)adjustingExposure
{
    _adjustingExposure = adjustingExposure;
    return self;
}

- (instancetype)setDevicePosition:(SCManagedCaptureDevicePosition)devicePosition
{
    _devicePosition = devicePosition;
    return self;
}

- (instancetype)setZoomFactor:(CGFloat)zoomFactor
{
    _zoomFactor = zoomFactor;
    return self;
}

- (instancetype)setFlashSupported:(BOOL)flashSupported
{
    _flashSupported = flashSupported;
    return self;
}

- (instancetype)setTorchSupported:(BOOL)torchSupported
{
    _torchSupported = torchSupported;
    return self;
}

- (instancetype)setFlashActive:(BOOL)flashActive
{
    _flashActive = flashActive;
    return self;
}

- (instancetype)setTorchActive:(BOOL)torchActive
{
    _torchActive = torchActive;
    return self;
}

- (instancetype)setLensesActive:(BOOL)lensesActive
{
    _lensesActive = lensesActive;
    return self;
}

- (instancetype)setArSessionActive:(BOOL)arSessionActive
{
    _arSessionActive = arSessionActive;
    return self;
}

- (instancetype)setLiveVideoStreaming:(BOOL)liveVideoStreaming
{
    _liveVideoStreaming = liveVideoStreaming;
    return self;
}

- (instancetype)setLensProcessorReady:(BOOL)lensProcessorReady
{
    _lensProcessorReady = lensProcessorReady;
    return self;
}

@end
